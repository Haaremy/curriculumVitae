"use strict";(()=>{var e={};e.id=151,e.ids=[151],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},6227:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>S,patchFetch:()=>f,requestAsyncStorage:()=>g,routeModule:()=>x,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h});var t={};s.r(t),s.d(t,{GET:()=>l});var o=s(9303),n=s(8716),a=s(670),i=s(7070),p=s(7147),u=s.n(p),d=s(1017),c=s.n(d);async function l(e){try{let{searchParams:r}=new URL(e.url),s=r.get("series");if(!s)return i.NextResponse.json({error:"Series name is required"},{status:400});let t=c().join(process.cwd(),`public/series/${s}`);if(!u().existsSync(t))return i.NextResponse.json({error:"Series not found"},{status:404});let o=u().readdirSync(t),n=[];return o.forEach(e=>{let r=c().join(t,e),s=u().readdirSync(r);n.push({season:e,episodes:s})}),i.NextResponse.json({fullSeries:n})}catch(e){return console.error("Error fetching seasons and episodes:",e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}let x=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/getSeasonEpisodes/route",pathname:"/api/getSeasonEpisodes",filename:"route",bundlePath:"app/api/getSeasonEpisodes/route"},resolvedPagePath:"C:\\Users\\444je\\Documents\\haaremy.de\\app\\api\\getSeasonEpisodes\\route.ts",nextConfigOutput:"export",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:m}=x,S="/api/getSeasonEpisodes/route";function f(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:h})}}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,972],()=>s(6227));module.exports=t})();